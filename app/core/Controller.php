<?php

namespace Vonzo\Controllers;

use Vonzo\Models;
use Vonzo\Views;
use Vonzo\Languages\Language as Language;

/**
 * The base Controller upon which all the other controllers are extended on
 */
class Controller {

    /**
     * The database connection
     * @var	object
     */
    public $db;

    /**
     * The site settings from the DB
     * @var	array
     */
    protected $settings;

    /**
     * The view object to be passed to the controllers
     * @var	object
     */
    protected $view;

    /**
     * The language array to be passed to the controllers and views
     * @var array
     */
    protected $lang;

    /**
     * The list of available languages
     * @var array
     */
    protected $languages;

    /**
     * User selected language
     * @var string
     */
    protected $language;

    /**
     * The current URL path (route) array to be passed to the controllers
     * @var array
     */
    protected $url;

    /**
     * The user array from DB
     * @var	array
     */
    protected $globalUser = NULL;

    /**
     * The API token header
     * @var	string
     */
    protected $tokenHeader;

    /**
     * Controller constructor.
     * @param $db
     */
    public function __construct($db, $url) {
        $this->db = $db;
        $this->url = $url;

        // Instantiate the main Model
        $model = new Models\Model($this->db);

        $this->settings['site_language'] = 'english';
        $this->settings['site_theme'] = 'light';
        $this->settings['site_title'] = SITE_NAME;
        $this->settings['site_url'] = URL_PATH;
        $this->settings['seo_privacy'] = 0;

        // Instantiate the Language system and set the default language
        $language = new Language();

        $this->lang = $language->set($this->settings['site_language']);
        $this->languages = $language->languages;
        $this->language = $language->get();

        // Instantiate the View
        $this->view = new Views\View($this->settings, $this->lang, $this->url);

        if(isset($_COOKIE['_sb_hash'])) {
            $this->globalUser = $this->grabUser();
        } else if (isset($_SESSION['_sb_hash'])) {
            $this->globalUser = $this->grabUser();
        } else {
            $this->globalUser = NULL;
        }
    }

    /**
     * Get and instantiate the requested model
     *
     * @return	object
     */
    public function model($model) {
        require_once(__DIR__ . '/../models/' . $model . '.php');

        /*
         * The namespace\class must be defined in a string as it can't be called shorted using new namespace\$var
         */
        $class = 'Vonzo\Models\\'.$model;

        return new $class($this->db);
    }

    /**
     * Output the final view to the user based on the request type
     *
     * @param   $data   array   The output generated by the controllers
     * @return	string
     */
    public function run($data = null) {
        if($this->url[0] == 'ajax') {
            if(isAjax()) {
              if($data != null){
                echo json_encode($data);
              }
            } else {
              redirect();
            }
        } else {
            $data['header_view'] = $this->getHeader();
            if (isset($data['content'])) {
              $data['content_view'] = $data['content'];
            } else {
              $data['content_view'] = '';
            }
            $data['footer_view'] = $this->getFooter();
            if(isAjax()) {
                echo json_encode(['title' => $this->view->docTitle(),'content' => $data['content_view'], 'footer' => $data['footer_view']]);
            } else {
                echo $this->view->render($data, 'wrapper');
            }
        }
    }

    private function getHeader() {
        if (is_null($this->globalUser)) {
          $data = [];
        } else {
          $data['user'] = $this->globalUser;
        }
        return $this->view->render($data, 'shared/inside-header');
    }

    private function getFooter() {
        $data = [];
        return $this->view->render($data, 'shared/inside-footer');
    }

    public function grabUser() {
      $this->account = $this->model('User');
      if (isset($_SESSION['_sb_hash'])) {
        $user = $this->account->get(1);
      } else if (isset($_COOKIE['_sb_hash'])) {
        $user = $this->account->get(2);
      } else {
        $this->globalLogout(true);
      }

      if ($user) {
        $this->account->setUserModel($user);
        return $this->account;
      } else {
        $this->globalLogout(true);
      }
    }

    public function globalLogout($redirect = true) {
      unset($_SESSION['_sb_hash']);
      setcookie("_sb_hash", '', time()-3600, COOKIE_PATH);

      if($redirect) {
        redirect('index');
      }

    }

}
